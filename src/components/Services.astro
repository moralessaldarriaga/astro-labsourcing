---
import Pexels from '../assets/image-zoom-clippath.webp';
import { Image } from 'astro:assets';
---

<section id="servicios" class="pb-24 space-y-8 relative z-[3] bg-white">
    <div class="w-11/12 mx-auto">
        <div class="h-[200vh] min-h-screen relative">
            <div class="hero-img h-[100vh] sticky top-0 overflow-hidden will-change-transform">
                <div class="image-wrap w-full h-full overflow-clip will-change-clip-transform">
                    <Image
                        src={Pexels}
                        alt="Pexels"
                        widths={[400, 800, 1200]}
                        formats={['webp', 'avif']}
                        sizes="(max-width: 768px) 100vw, 50vw"
                        class="wide-image object-cover w-full h-full object-center aspect-video will-change-transform"
                    />
                </div>
            </div>
        </div>
        <div class="pt-32 grid gap-y-16 md:gap-y-32">
            <div class="services-grid grid grid-cols-1 gap-y-8 md:gap-y-32">
                <div class="services-block md:h-[100vh] justify-center items-center grid grid-cols-1 md:grid-cols-2 gap-8">
                    <div class="services-card">
                        <h2 class="text-fluid-xl">Services title</h2>
                        <div class="services-text">
                            <p class="text-fluid-sm">Our process starts with strategic anchoring, grasping clients’ goals, user needs, and evaluating current products and usage data.</p>
                        </div>
                    </div>
                    <div class="services-card aspect-video bg-slate-100">
                    </div>
                </div>
            </div>
            <div class="services-grid grid grid-cols-1 gap-y-8 md:gap-y-32">
                <div class="services-block md:h-[100vh] justify-center items-center grid grid-cols-1 md:grid-cols-2 gap-8">
                    <div class="services-card">
                        <h2 class="text-fluid-xl">Services title</h2>
                        <div class="services-text">
                            <p class="text-fluid-sm">Our process starts with strategic anchoring, grasping clients’ goals, user needs, and evaluating current products and usage data.</p>
                        </div>
                    </div>
                    <div class="services-card aspect-video bg-slate-100">
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    import gsap from "gsap";
    import ScrollTrigger from 'gsap/ScrollTrigger';
    import SplitText from 'gsap/SplitText';

    gsap.registerPlugin(ScrollTrigger, SplitText);

    const imageWrap = document.querySelector('.image-wrap');
    const image = document.querySelector('.wide-image');

    if (imageWrap && image) {
        const itemTL = gsap.timeline({
            scrollTrigger: {
                trigger: '.hero-img',
                start: 'top top',
                end: '+=100%',
                scrub: 0.3,
                // pin: true,
                invalidateOnRefresh: true,
            },
        });

        itemTL
            .fromTo(
                imageWrap,
                { clipPath: 'inset(35%)' },
                { clipPath: 'inset(0%)', ease: 'sine.inOut' }
            )
            .fromTo(
                image,
                { scale: 1.1 },
                { scale: 1, ease: 'sine.inOut' },
                0
            );

        // gsap.from('.text-wrapper h1', {
        //   scrollTrigger: {
        //     trigger: '.content',
        //     start: 'top 90%',
        //     end: 'top 60%',
        //     scrub: 0.5,
        //   },
        //   y: 30,
        //   opacity: 0,
        //   ease: 'power2.out',
        // });
    }

    if (window.innerWidth >= 769) {
        document.fonts.ready.then(() => {

            const sectionServicesGrid = document.querySelectorAll('.services-grid');

            sectionServicesGrid.forEach((sectionGrid, indexGrid) => {

                const servicesBlocks = sectionGrid.querySelectorAll('.services-block');

                servicesBlocks.forEach((block, index) => {

                    const up = gsap.fromTo(
                        block,
                        {
                            opacity: 0,
                            y: 0, // Aumentado de 50 a 100 para un movimiento más evidente
                        },
                        {
                            opacity: 1,
                            y: 0,
                            duration: 1.5, // Ligeramente más larga para suavizar el efecto
                            ease: "sine.inOut", // Easing más dinámico para un movimiento natural
                            scrollTrigger: {
                                trigger: block,
                                start: "top 80%", // Comienza cuando el elemento está al 80% del viewport
                                end: "bottom 20%", // Termina cuando el elemento está al 20% del viewport
                                once: true, // Solo reproduce la animación al entrar
                            },
                        }
                    );

                    const split = new SplitText(block.querySelector('.services-text p'), {
                        type: "words",
                        wordsClass: "word"
                    });

                    const tl = gsap
                    .timeline({
                        scrollTrigger: {
                            trigger: sectionGrid,
                            start: "top top",
                            end: "+=150%",
                            scrub: .3,
                            pin: true,
                            invalidateOnRefresh: true,
                        }
                    })
                    .set(
                        split.words,
                        {
                            opacity: 1,
                            stagger: 0.1
                        },
                        0.1
                    );
                });
            });
        });
    }
</script>